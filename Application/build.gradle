apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'android-apt'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'maven'
apply plugin: 'io.fabric'

def Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def env = System.getenv()
def env_twitter_key = env["TWITTER_KEY"]
def twitter_key = properties.getProperty('TWITTER_KEY', env_twitter_key)
def env_twitter_secret = env["TWITTER_SECRET"]
def twitter_secret = properties.getProperty('TWITTER_SECRET', env_twitter_secret)
android {
    compileSdkVersion 23
    buildToolsVersion '23.0.0'

    // Version Info
    def versionMajor = 0
    def versionMinor = 2
    def versionPatch = 4
    def versionBuild = 1 // bump for dogfood builds, public betas, etc.

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 22
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        multiDexEnabled true
    }

    sourceSets {
        main {
            aidl.srcDirs = ['src/main/java/com/shareyourproxy/api/aidl']
            res.srcDirs = ['src/main/res',
                           'src/main/res/images',
                           'src/main/res/layouts',
                           'src/main/res/layouts/activity',
                           'src/main/res/layouts/fragment',
                           'src/main/res/layouts/dialog',
                           'src/main/res/layouts/adapter',
                           'src/main/res/layouts/common',
                           'src/main/res/layouts/widget'
            ]
        }
    }

    signingConfigs {
        release {
//              Environment Variables
            def env_keystore_password = env["KEYSTORE_PASSWORD"]
            def env_key_alias = env["KEY_ALIAS"]
            def env_key_password = env["KEY_PASSWORD"]
//              Local build values
            def keystore_password = properties.getProperty('KEYSTORE_PASSWORD',
                    env_keystore_password)
            def key_alias = properties.getProperty('KEY_ALIAS', env_key_alias)
            def key_password = properties.getProperty('KEY_PASSWORD', env_key_password)
//              Signed release commands
            storeFile file("proxy.jks")
            storePassword keystore_password
            keyAlias key_alias
            keyPassword key_password
        }
    }

    def env_google_tracker = env["GA_TRACKER_ID"]
    def env_firebase_endpoint = env["FIREBASE_ENDPOINT"]
    def env_instagram_app_id = env["INSTAGRAM_APP_ID"]
    def env_instagram_app_secret = env["INSTAGRAM_APP_SECRET"]
    def env_webview_redirect = env["WEBVIEW_REDIRECT"]
    def env_spotify_client_id = env["SPOTIFY_CLIENT_ID"]
    def env_spotify_client_secret = env["SPOTIFY_CLIENT_SECRET"]
    def tracker_id = properties.getProperty('GA_TRACKER_ID', env_google_tracker)
    def firebase_endpoint = properties.getProperty('FIREBASE_ENDPOINT', env_firebase_endpoint)
    def instagram_app_id = properties.getProperty('INSTAGRAM_APP_ID', env_instagram_app_id)
    def instagram_app_secret = properties.getProperty('INSTAGRAM_APP_SECRET', env_instagram_app_secret)
    def webview_redirect = properties.getProperty('WEBVIEW_REDIRECT', env_webview_redirect)
    def spotify_client_id = properties.getProperty('SPOTIFY_CLIENT_ID', env_spotify_client_id)
    def spotify_client_secret = properties.getProperty('SPOTIFY_CLIENT_SECRET', env_spotify_client_secret)

    buildTypes {
        debug {
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
            //disable google analytics
            buildConfigField "boolean", "USE_GOOGLE_ANALYTICS", "false"
            buildConfigField "String", "GA_TRACKER_ID", tracker_id
            buildConfigField "String", "FIREBASE_ENDPOINT", firebase_endpoint
            buildConfigField "String", "TWITTER_KEY", twitter_key
            buildConfigField "String", "TWITTER_SECRET", twitter_secret
            buildConfigField "String", "INSTAGRAM_APP_ID", instagram_app_id
            buildConfigField "String", "WEBVIEW_REDIRECT", webview_redirect
            buildConfigField "String", "INSTAGRAM_APP_SECRET", instagram_app_secret
            buildConfigField "String", "SPOTIFY_CLIENT_ID", spotify_client_id
            buildConfigField "String", "SPOTIFY_CLIENT_SECRET", spotify_client_secret
        }
        release {
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            ext.enableCrashlytics = true
            buildConfigField "boolean", "USE_GOOGLE_ANALYTICS", "true"
            buildConfigField "String", "GA_TRACKER_ID", tracker_id
            buildConfigField "String", "FIREBASE_ENDPOINT", firebase_endpoint
            buildConfigField "String", "TWITTER_KEY", twitter_key
            buildConfigField "String", "TWITTER_SECRET", twitter_secret
            buildConfigField "String", "INSTAGRAM_APP_ID", instagram_app_id
            buildConfigField "String", "WEBVIEW_REDIRECT", webview_redirect
            buildConfigField "String", "INSTAGRAM_APP_SECRET", instagram_app_secret
            buildConfigField "String", "SPOTIFY_CLIENT_ID", spotify_client_id
            buildConfigField "String", "SPOTIFY_CLIENT_SECRET", spotify_client_secret

            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        abortOnError true
        disable 'InvalidPackage'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
//        duplicate files in Butterknife and Realm?
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    def isTravis = "true".equals(System.getenv("TRAVIS"))
    def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

    dexOptions {
        javaMaxHeapSize "4g"
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isTravis
    }
}

afterEvaluate {
    def commentMessage = "This is autogenerated crashlytics property from system environment to prevent key to be committed to source control."
    def crash_key = properties.getProperty('CRASHLYTICS_API_KEY', env["CRASHLYTICS_API_KEY"])
    def crash_secret = properties.getProperty('CRASHLYTICS_API_SECRET', env["CRASHLYTICS_API_SECRET"])
    ant.propertyfile(file: "fabric.properties", comment: commentMessage) {
        entry(key: "apiSecret", value: crash_secret)
        entry(key: "apiKey", value: crash_key)
    }
}

dependencies {

    //Local
    compile fileTree(dir: 'libs', include: '*.jar')
    //Google
    compile 'com.google.android.gms:play-services-plus:+'
    compile 'com.google.android.gms:play-services-analytics:+'
    compile 'com.google.android.gms:play-services-identity:+'
    //Android
    compile 'com.android.support:design:+'
    compile 'com.android.support:support-v4:+'
    compile 'com.android.support:appcompat-v7:+'
    compile 'com.android.support:recyclerview-v7:+'
    compile 'com.android.support:palette-v7:+'
    compile 'com.android.support:multidex:+'
    //Square
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    compile 'com.jakewharton:butterknife:7.0.0'
    compile 'com.jakewharton.timber:timber:3.1.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    //Third party
    compile 'com.facebook.android:facebook-android-sdk:4.1.0'
    compile 'com.github.frankiesardo:auto-parcel:0.3'
    apt 'com.github.frankiesardo:auto-parcel-processor:0.3'
    compile 'io.realm:realm-android:0.82.1'
    compile 'com.firebase:firebase-client-android:2.3.0'
    compile 'io.reactivex:rxjava:1.0.13'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.caverock:androidsvg:1.2.2-beta-1'
    compile('com.twitter.sdk.android:twitter:1.7.2@aar') {
        transitive = true;
    }
    //Bug Tracking
    compile('com.crashlytics.sdk.android:crashlytics:2.5.1@aar') {
        transitive = true;
    }
}
